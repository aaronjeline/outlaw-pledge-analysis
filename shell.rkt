#lang racket
(begin (begin (let ((loop (rec loop () (begin (display ":> ") (let ((in ((λ () (begin (syscall_read)))))) (let ((args (string-split in #\space))) (if (string=? "exit" (car args)) (begin (forbid syscall_msgrcv) 0) (if (string=? "cd" (car args)) ((λ (dir) (begin ((λ (i0) (begin (syscall_chdir i0))) dir) (loop))) (car (cdr args))) ((λ (args) (let ((name (car args))) (let ((pid ((λ () (begin (syscall_fork)))))) (if (= 0 pid) (begin (forbid syscall_wait) ((λ (i0 i1) (begin (syscall_execvp i0 i1))) name args)) (let ((exit-code ((λ () (begin (syscall_wait)))))) (if (= 0 exit-code) (loop) (begin ((λ (i0) (begin (syscall_write i0))) (string-append "Process exited w/ non-zero exit code: " (number->string exit-code))) (loop)))))))) args))))))))) (begin (loop) (begin (forbid syscall_msgrcv) 1)))))
